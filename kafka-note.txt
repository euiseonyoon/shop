카프카

1. 토픽 (Kafka에서 메시지가 저장되는 논리적 채널)
e.g.). cryto-price,  user-activity

--------------------------------------------------------

2. 파티션
토픽안에 여러개의 파티션이 있을수 있음
파티션 내부에서는 순서보장이 된다
하지만 파티션 간의 순서보장은 없다

예를들면,

cryto-price 라는 topic 하위에
    crypto-price-0
    crypto-price-1
    crypto-price-2
이 있다고 하자

메시지의 key에 따라서 파티션이 구분됨,  btc-price 라는 키를 가진 메시지는   crypto-price-0. 에만 쌓인다.

--------------------------------------------------------

4. 브로커(Broker)
Kafka 서버(노드) 하나를 브로커라고 함

클러스터는 여러 브로커가 모여서 구성됨

각 브로커는 여러 파티션을 저장하고 관리함

docker-compose 에서 KAFKA_BROKER_ID: 3  -> 브로커 3개

--------------------------------------------------------

3. 복제 팩터(Replication Factor)
파티션별로 데이터를 몇 개의 브로커에 **복제(복사)**할지 결정하는 값

복제 덕분에 한 브로커가 장애 나도 데이터 손실 없이 계속 서비스 가능

보통 클러스터 내 브로커 수와 같거나 그보다 작게 설정

예: 복제 팩터 3 → 파티션 데이터가 3개 브로커에 모두 복제됨

--------------------------------------------------------

6. 컨슈머(Consumer)
Kafka로부터 메시지를 읽는 클라이언트

특정 토픽의 파티션을 구독하고 데이터를 소비

컨슈머 그룹(Consumer Group)을 만들어 병렬 처리 가능

--------------------------------------------------------

7. 오프셋(Offset)
파티션 내에서 메시지의 위치(인덱스)

컨슈머는 오프셋을 저장해서 어디까지 읽었는지 관리

필요 시 오프셋을 이동하며 재처리도 가능

--------------------------------------------------------

8. 컨슈머 그룹(Consumer Group)
여러 컨슈머가 모여 같은 그룹을 만듦

그룹 내 컨슈머들은 토픽 파티션을 나눠서 병렬 처리

각 파티션은 그룹 내 한 컨슈머에게만 할당됨 → 메시지 중복 처리 방지





복제 팩터	리더 파티션 수	팔로워 파티션 수	총 복제본 수
3	        1	        2	            3
2	        1	        1	            2
1	        1	        0	            1